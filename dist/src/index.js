"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = require("dotenv");
(0, dotenv_1.config)();
const mongo_1 = require("./db/mongo");
const postgres_1 = require("./db/postgres");
const express_1 = __importDefault(require("express"));
const node_http_1 = require("node:http");
const socketIo_1 = __importDefault(require("./socketIo"));
const morgan_1 = __importDefault(require("morgan"));
const body_parser_1 = __importDefault(require("body-parser"));
const cors_1 = __importDefault(require("cors"));
const errorhandler_1 = __importDefault(require("errorhandler"));
const apitoken_1 = __importDefault(require("./middlewares/apitoken"));
const _404_1 = __importDefault(require("./middlewares/404"));
const error_1 = __importDefault(require("./middlewares/error"));
const index_1 = __importDefault(require("./routes/api/index"));
const index_2 = __importDefault(require("./routes/static/index"));
// import { apollo } from "./graphql/index";
const app = (0, express_1.default)();
const server = (0, node_http_1.createServer)(app);
(0, mongo_1.connectMongo)();
(0, postgres_1.connectPostgress)();
app.use((0, express_1.default)());
app.use((0, morgan_1.default)("dev"));
app.use((0, cors_1.default)());
app.use(body_parser_1.default.text({ type: "text/html" }));
app.use(body_parser_1.default.json({ type: "application/json" }));
app.use(body_parser_1.default.urlencoded({ extended: true }));
app.use((0, errorhandler_1.default)());
app.use(apitoken_1.default);
(0, socketIo_1.default)(server);
app.use("/api", index_1.default);
app.use(index_2.default);
// app.use("/graphql", apollo);
app.use(_404_1.default);
app.use(error_1.default);
var port = parseInt(`${process.env.PORT}`);
var hostname = process.env.HOSTNAME || "127.0.0.1";
server.listen(port, hostname, () => {
    console.log(`El servidor esta corriendo: ðŸ˜± ðŸ˜‹ http://${hostname}:${port}`);
}).on("error", (e) => {
    console.log("Address in use, retrying..." + e.message);
}).close();
